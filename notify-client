#!/usr/bin/env python3

import argparse
import json
import logging
import socket
import sys


logger = logging.getLogger('notify-client')


logging.basicConfig(level=logging.WARNING, format='%(message)s')

parser = argparse.ArgumentParser()
parser.add_argument(
    'summary', metavar='SUMMARY',
    help="Titleline of the notification.",
)
parser.add_argument(
    'body', default=None, metavar='BODY', nargs='?',
    help="Extendend information in the notification.",
)

parser.add_argument(
    '-a', '--app-name', metavar='APP_NAME',
    help="Specifies the app name for the icon",
)
parser.add_argument(
    '-c', '--category', metavar='TYPE[,TYPE...]',
    help="Specifies the notification category.",
)
parser.add_argument(
    '-i', '--icon', metavar='ICON[,ICON...]',
    help="Specifies an icon filename or stock icon to display.",
)
parser.add_argument(
    '--hint', metavar='TYPE:NAME:VALUE',
    help=(
        "Specifies basic extra data to pass. Valid types are int, double, "
        "string and byte."
    ),
)
parser.add_argument(
    '-s', '--server', metavar='ADDR:PORT', default='127.0.0.1:1216',
    help="Host to send notification to.",
)
parser.add_argument(
    '-t', '--expire-time', metavar='TIME',
    help="Specifies the timeout in milliseconds at which to expire.",
)
parser.add_argument(
    '-u', '--urgency', metavar='LEVEL',
    choices=['low', 'normal', 'critical'],
    help="Specifies the urgency level.",
)
parser.add_argument(
    '-w', '--window-id', metavar='WINDOWID[,WINDOWID...]',
    help="Specifies the source window id.",
)

args = parser.parse_args()

socket.setdefaulttimeout(30)
client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
addr, port = args.server.split(':')
logger.info("Sending to %s:%s.", addr, port)
client.connect((addr, int(port)))

data = dict(args.__dict__)
data.pop('server')
payload = json.dumps(data).encode('utf-8')

logger.debug(">>> %r", payload)
client.send(payload)

client.close()
