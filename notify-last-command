#!/bin/bash

# Minimal duration of last commands to notify it.
export NOTIFY_MIN_SECONDS=${NOTIFY_MIN_SECONDS-10}


function _guess_window_title() {
    fqdn=$(hostname --fqdn)
    if [ -n "${BYOBU_BACKEND-}" ] && [ -n "${TMUX-}" ] ; then
        if (echo -e '8.0 NEWER'; cat /etc/debian_version) | sort -V | head -1 | grep -q NEWER ; then
            window=$(tmux display-message -p '#W')
            echo "$window $fqdn ($$)";
        else
            # This is the default byobu title, recomputed
            ip=$(ip addr show dev eth0 | grep -oP '(?<=inet )(.*)(?=/)')
            echo "${LOGNAME}@$fqdn ($ip) - byobu"
        fi
    else
        # Put this in ~/.config/byobu/.tmux.conf:
        #
        #     set -g set-titles on
        #     set -g set-titles-string '#(hostname --fqdn) (#{pane_pid})'
        echo "bash $fqdn ($$)"
    fi
}

function _reset_title() {
    export NOTIFY_TITLE=$(_guess_window_title)
    echo -ne "\033]2;${NOTIFY_TITLE}\007"
}

function _notify_last_command() {
    last_entry=($@)

    # If not desktop, use client.
    if [ -z "${DESKTOP_SESSION-}" ] ; then
        notify=notify-client
    elif notify-is-focused; then
        # bash is focused. skip.
        return
    else
        notify=notify-send
    fi

    last_start=${last_entry[2]}
    if [ $last_start -le ${_NOTIFY_LAST_TIME-0} ] ; then
        return
    fi

    now=$(date +%s)
    elapsed_seconds=$((now - last_start))

    if [ $elapsed_seconds -lt ${NOTIFY_MIN_SECONDS} ] ; then
        return
    fi

    last_exit_code=${last_entry[0]}
    last_command=${last_entry[@]:3}

    if [ ${last_exit_code} -eq 0 ] ; then
        $notify --icon utilites-terminal --hint int:transient:1 \
                "Command exited on ${NOTIFY_TITLE}" "$last_command"
    else
        $notify --icon gtk-dialog-error --urgency=critical \
                "Command failed on ${NOTIFY_TITLE}" "$last_command"
    fi
}

function notify_last_command() {
    last_exit_status=$1
    last_entry="$(HISTTIMEFORMAT="%s " history 1)"

    # Check tmux window name update
    _reset_title

    # Run in background
    (_notify_last_command $last_exit_status ${last_entry} &)

    export _NOTIFY_LAST_TIME=$(date +%s)
}

if [[ ${BASH_SOURCE[0]} = $0 ]]; then
    set -eux
    _notify_last_command $@
else
    # sourced in .bashrc, bootstrap.
    # Ignore previous history.
    export _NOTIFY_LAST_TIME=$(date +%s)
fi
